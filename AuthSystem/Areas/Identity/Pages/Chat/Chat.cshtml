@page "{roomId:int}"
@model ChatModel
@{
    ViewData["Title"] = "Private Chat";
}
<link rel="stylesheet" href="~/css/chat/privateChat.css" />
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet" />

<h2 class="chat-room-title">Chat Room: @Model.Room.Name</h2>
<div class="chat-container">
    <div class="chat-content-container">
        <div class="chat-content">
            <ul id="messagesList" class="chat-box">
                @if (Model.Messages.Any())
                {
                    var lastDate = Model.Messages.First().Timestamp.Date;
                    <li class="date-separator">
                        <span class="date">@lastDate.ToString("MMMM dd, yyyy")</span>
                    </li>

                    @foreach (var message in Model.Messages)
                    {
                        if (message.Timestamp.Date != lastDate)
                        {
                            lastDate = message.Timestamp.Date;
                            <li class="date-separator">
                                <span class="date">@lastDate.ToString("MMMM dd, yyyy")</span>
                            </li>
                        }
                        <li class="list-group-item @(message.Sender.Email == User.Identity.Name ? "sent" : "received")">
                            @if (message.Sender.Email != User.Identity.Name)
                            {
                                <div class="username">@message.Sender.FirstName @message.Sender.LastName</div>
                            }
                            <div class="message">@message.Content</div>
                            <div class="time">@message.Timestamp.ToString("HH:mm:ss")</div>
                            @if (!string.IsNullOrEmpty(message.ImageUrl))
                            {
                                <div class="message"><img src="@message.ImageUrl" class="chat-image" /></div>
                            }
                        </li>
                    }
                }
            </ul>
            <div class="chat-input">
                <form id="messageForm" method="post" enctype="multipart/form-data">
                    <div class="input-group">
                        <input type="hidden" id="userEmail" value="@User.Identity.Name" />
                        <input type="hidden" name="ChatRoomId" value="@Model.Room.Id" />
                        <input type="text" class="form-control" name="Content" placeholder="Type your message..." />
                        <input type="file" class="form-control" name="Image" accept="image/*" />
                        <button type="submit" class="btn btn-primary" id="sendButton">Send Message</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="participants-add-user-container">
        <div class="participants-container">
            <h3>Participants</h3>
            <ul>
                @foreach (var participant in Model.Participants)
                {
                    <li>
                        @participant.FirstName
                        @if (participant.Email == Model.Room.Creator.Email)
                        {
                            <span>(Admin)</span>
                        }
                        @if (User.Identity.Name == Model.Room.Creator.Email && participant.Email != Model.Room.Creator.Email)
                        {
                            <button type="button" class="btn btn-danger btn-sm" data-toggle="modal" data-target="#removeUserModal" data-username="@participant.FirstName @participant.LastName" data-userid="@participant.Id">Remove</button>
                        }
                    </li>
                }
            </ul>
        </div>

        @if (User.Identity.Name == Model.Room.Creator.Email)
        {
            <form id="addUserForm" method="post" asp-page-handler="AddUser">
                <div class="form-group">
                    <input type="hidden" name="ChatRoomId" value="@Model.Room.Id" />
                    <input type="text" class="form-control" name="UserIdToAdd" placeholder="Enter user email..." />
                </div>
                <button type="submit" class="btn btn-secondary">Add User</button>
            </form>
        }
    </div>
</div>

<!-- Remove User Modal -->
<div class="modal fade" id="removeUserModal" tabindex="-1" role="dialog" aria-labelledby="removeUserModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="removeUserModalLabel">Remove User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to remove <span id="modalUserName"></span> from the chat room?
            </div>
            <div class="modal-footer">
                <form id="removeUserForm" method="post" asp-page-handler="RemoveUser">
                    <input type="hidden" name="ChatRoomId" value="@Model.Room.Id" />
                    <input type="hidden" id="modalUserId" name="UserIdToRemove" value="" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Remove</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.3/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/privatechathub")
            .build();

        connection.start().then(function () {
            const chatRoomId = document.getElementsByName("ChatRoomId")[0].value;
            connection.invoke("JoinChatRoom", chatRoomId).catch(function (err) {
                console.error("Error joining chat room: ", err.toString());
            });
        }).catch(function (err) {
            console.error("Error starting connection: ", err.toString());
        });

        connection.on("ReceiveMessage", function (userName, message, imageUrl) {
            const msgDiv = document.createElement("li");
            msgDiv.classList.add("list-group-item", userName === document.getElementById("userEmail").value ? "sent" : "received");

            let messageContent = '';

            if (userName !== document.getElementById("userEmail").value) {
                messageContent += `<div class="username">${userName}</div>`;
            }

            if (message) {
                messageContent += `<div class="message">${message}</div>`;
            }

            if (imageUrl) {
                messageContent += `<div class="message"><img src="${imageUrl}" class="chat-image" /></div>`;
            }

            messageContent += `<div class="time">${new Date().toLocaleTimeString()}</div>`;

            msgDiv.innerHTML = messageContent;
            document.getElementById("messagesList").appendChild(msgDiv);
            scrollToBottom();
        });

        document.getElementById("messageForm").addEventListener("submit", function (event) {
            event.preventDefault();
            const form = event.target;
            const message = form.Content.value;
            const chatRoomId = form.ChatRoomId.value;
            const userEmail = document.getElementById("userEmail").value;

            const formData = new FormData(form);

            if (message.trim() !== "" || form.Image.files.length > 0) {
                fetch(form.action, {
                    method: "POST",
                    body: formData
                }).then(response => {
                    if (response.ok) {
                        connection.invoke("SendMessage", chatRoomId, userEmail, message).catch(function (err) {
                            console.error("Error sending message: ", err.toString());
                        });
                        form.Content.value = '';
                        form.Image.value = '';
                        scrollToBottom();
                    } else {
                        console.error("Form submission failed.");
                    }
                }).catch(error => {
                    console.error("Error submitting form: ", error);
                });
            }
        });

        function scrollToBottom() {
            const chatBox = document.querySelector(".chat-box");
            chatBox.scrollTop = chatBox.scrollHeight;
        }

        // Scroll to bottom when the page is first loaded
        window.onload = function () {
            scrollToBottom();
        };

        $('#removeUserModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget); // Button that triggered the modal
            var userName = button.data('username'); // Extract info from data-* attributes
            var userId = button.data('userid'); // Extract info from data-* attributes

            var modal = $(this);
            modal.find('#modalUserName').text(userName);
            modal.find('#modalUserId').val(userId);
        });
    </script>
}