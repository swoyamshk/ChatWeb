@page "{roomId:int}"
@model ChatModel
@{
    ViewData["Title"] = "Private Chat";
}
<link rel="stylesheet" href="~/css/Chat/privateChat.css" />
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

<div class="container-fluid chat-wrapper">
    <div class="row">
        <div class="col-md-3 chat-rooms-container">
            <h2>Chat Rooms</h2>
            <ul class="chat-rooms-list">
                @foreach (var room in Model.ChatRooms)
                {
                    <li class="chat-room-item @(room.Id == Model.Room.Id ? "active" : "")">
                        <a asp-page="Chat" asp-route-roomId="@room.Id">@room.Name</a>
                    </li>
                }
            </ul>
        </div>
        <div class="chat-container">
            <h2 class="chat-room-title">
                @Model.Room.Name
                <div class="participant-count">
                    Total Participants: @Model.Participants.Count
                </div>
            </h2>
            <div class="search-bar">
                <input type="text" id="searchInput" class="form-control" placeholder="Search messages..." />
            </div>
            <div class="chat-content-container">
                <div class="chat-content">
                    <ul id="messagesList" class="chat-box">
                        @if (Model.Messages.Any())
                        {
                            var lastDate = Model.Messages.First().Timestamp.Date;
                            <li class="date-separator">
                                <span class="date">@lastDate.ToString("MMMM dd, yyyy")</span>

                            </li>
                            @foreach (var message in Model.Messages)
                            {
                                if (message.Timestamp.Date != lastDate)
                                {
                                    lastDate = message.Timestamp.Date;
                                    <li class="date-separator">
                                        <span class="date">@lastDate.ToString("MMMM dd, yyyy")</span>
                                    </li>
                                }
                                <li class="list-group-item @(message.Sender.Email == User.Identity.Name ? "sent" : "received")">
                                    <div class="message-container">
                                        <div class="message-content">
                                            @if (message.Sender.Email != User.Identity.Name)
                                            {
                                                <div class="username">@message.Sender.FirstName @message.Sender.LastName</div>
                                            }
                                            <div class="message-text">@message.Content</div>
                                            @if (!string.IsNullOrEmpty(message.ImageUrl))
                                            {
                                                <div class="message-image"><img src="@message.ImageUrl" class="chat-image" /></div>
                                            }
                                        </div>
                                        <div class="message-info">
                                            <div class="time">@message.Timestamp.ToString("h:mm tt").ToUpper()</div>
                                            @if (message.Sender.Email == User.Identity.Name)
                                            {
                                                <form method="post" asp-page-handler="DeleteMessage" asp-route-id="@message.Id" class="delete-message-form">
                                                    <button type="submit" class="btn btn-sm delete-button">
                                                        <i class="fas fa-trash-alt"></i>
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                    </div>
                                </li>


                            }
                        }
                    </ul>

                </div>
                <form id="messageForm" method="post" enctype="multipart/form-data">
                    <div class="input-group">
                        <input type="hidden" id="userEmail" value="@User.Identity.Name" />
                        <input type="hidden" name="ChatRoomId" value="@Model.Room.Id" />
                        <input type="text" class="form-control" name="Content" placeholder="Type your message..." />
                        <label for="fileInput" class="btn btn-secondary file-label">
                            <i class="fas fa-file-upload"></i>
                        </label>
                        <input type="file" id="fileInput" class="form-control-file" name="Image" accept="image/*" style="display: none;" />
                        <button type="submit" class="btn btn-primary" id="sendButton">Send</button>
                    </div>
                </form>
            </div>
        </div>
        <div class="col-md-3 participants-container" id="participantsContainer">
            <h3>
                Chat Details
            </h3>
            <div class="chat-details">
                <h4>Participants</h4>
            </div>
            <div id="participantsList">
                <!-- Add User Form -->
                <form id="addUserForm" method="post" asp-page-handler="AddUser">
                    <div class="form-group input-group">
                        <input type="hidden" name="ChatRoomId" value="@Model.Room.Id" />
                        <input type="text" class="form-control email-input" name="UserIdToAdd" placeholder="Enter user email..." />
                        <div class="input-group-append">
                            <button type="submit" class="btn btn-secondary"><i class="fas fa-plus plus-icon"></i></button>
                        </div>
                        <span asp-validation-for="UserIdToAdd" class="text-danger"></span>
                    </div>
                </form>


                <!-- Participants List -->
                <ul>
                    @foreach (var participant in Model.Participants)
                    {
                        <li>
                            @participant.FirstName
                            @if (participant.Email == Model.Room.Creator.Email)
                            {
                                <span>(Admin)</span>
                            }
                            @if (User.Identity.Name == Model.Room.Creator.Email && participant.Email != Model.Room.Creator.Email)
                            {
                                <!-- Delete icon button -->
                                <form method="post" asp-page-handler="RemoveUser" class="remove-user-form">
                                    <input type="hidden" name="ChatRoomId" value="@Model.Room.Id" />
                                    <input type="hidden" name="UserIdToRemove" value="@participant.Id" />
                                    <button type="submit" class="remove-btn">
                                        <i class="fas fa-trash-alt"></i> <!-- Trash icon for delete -->
                                    </button>
                                </form>
                            }
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="toggle-button-container">
            <span id="toggleParticipants" class="toggle-icon" style="cursor: pointer;">
                <i class="fas fa-times"></i>
            </span>
        </div>

    </div>
</div>

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const chatContent = document.querySelector('.chat-content');
        const toggleButton = document.getElementById('toggleParticipants');
        const participantsContainer = document.getElementById('participantsContainer');

        function scrollToBottom() {
            chatContent.scrollTop = chatContent.scrollHeight;
        }

        // Call scrollToBottom on page load
        scrollToBottom();

        // Optional: Call scrollToBottom whenever a new message is added
        const observer = new MutationObserver(scrollToBottom);
        observer.observe(chatContent, { childList: true });

        // Toggle participants container visibility
        if (toggleButton && participantsContainer) {
            toggleButton.addEventListener('click', function () {
                if (participantsContainer.style.display === 'none' || participantsContainer.style.display === '') {
                    participantsContainer.style.display = 'block';
                    toggleButton.innerHTML = '<i class="fas fa-times"></i>'; // Cross icon
                } else {
                    participantsContainer.style.display = 'none';
                    toggleButton.innerHTML = '<i class="fas fa-plus"></i>'; // Plus icon
                }
            });
        }

        // Handle Remove User Action with confirmation
        const removeUserForms = document.querySelectorAll('.remove-user-form');
        removeUserForms.forEach(function (form) {
            form.addEventListener('submit', function (event) {
                const confirmed = confirm("Are you sure you want to remove this user?");
                if (!confirmed) {
                    event.preventDefault();
                }
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById('searchInput');
        const messagesList = document.getElementById('messagesList');
        const messages = messagesList.getElementsByTagName('li');

        searchInput.addEventListener('keyup', function () {
            const filter = searchInput.value.toLowerCase();
            let previousMessageWasVisible = false;

            for (let i = 0; i < messages.length; i++) {
                const messageText = messages[i].querySelector('.message-text');
                const dateSeparator = messages[i].classList.contains('date-separator');

                if (messageText) {
                    const textValue = messageText.textContent || messageText.innerText;
                    if (textValue.toLowerCase().indexOf(filter) > -1) {
                        messages[i].style.display = "";
                        if (previousMessageWasVisible && i > 0 && messages[i - 1].classList.contains('date-separator')) {
                            messages[i - 1].style.display = "";
                        }
                        previousMessageWasVisible = true;
                    } else {
                        messages[i].style.display = "none";
                        previousMessageWasVisible = false;
                    }
                } else if (dateSeparator) {
                    messages[i].style.display = "none";
                    if (i < messages.length - 1 && messages[i + 1].style.display === "") {
                        messages[i].style.display = "";
                    }
                }
            }
        });
    });



    document.addEventListener("DOMContentLoaded", function () {
        const deleteForms = document.querySelectorAll('.delete-message-form');
        deleteForms.forEach(function (form) {
            form.addEventListener('submit', async function (event) {
                event.preventDefault();
                const confirmed = confirm("Are you sure you want to delete this message?");
                if (confirmed) {
                    try {
                        const response = await fetch(form.action, {
                            method: 'POST',
                            headers: {
                                'RequestVerificationToken': form.querySelector('input[name="__RequestVerificationToken"]').value
                            }
                        });

                        const result = await response.json();
                        if (result.success) {
                            // Optionally remove the message from the UI
                            form.closest('li').remove();
                        } else {
                            alert("Failed to delete the message. Please try again.");
                        }
                    } catch (error) {
                        console.error("An error occurred while deleting the message:", error);
                        alert("An error occurred. Please try again.");
                    }
                }
            });
        });
    });

</script>
