@page
@model GlobalChatModel
@{
    ViewData["Title"] = "Global Chat";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/chat/userChat.css" />

<div class="container chat-container">
    <h2>Global Chat</h2>

    <div class="chat-buttons">
        <a class="btn btn-success" asp-area="Identity" asp-page="/Chat/CreateChatRoom">Create Chat Room</a>
        <a class="btn btn-success" asp-area="Identity" asp-page="/Chat/ChatRooms">View Chat Rooms</a>
    </div>

    <div class="chat-content-container">
        <div class="chat-content">
            <div class="chat-box" id="chatBox">
                <ul id="messagesList" class="list-group">
                    @foreach (var message in Model.Messages)
                    {
                        <li class="list-group-item @(message.UserName == Model.CurrentUser?.Email ? "sent" : "received")">
                            @if (message.User != null && message.User.Email != Model.CurrentUser?.Email)
                            {
                                <div class="username">@message.User.FirstName @message.User.LastName</div>
                            }
                            else if (message.User == null || message.User.Email == Model.CurrentUser?.Email)
                            {
                                <div class="username"></div>
                            }
                            <div class="message">@message.Text</div>
                            @if (!string.IsNullOrEmpty(message.ImageUrl))
                            {
                                <div class="image chat-image">
                                    <img src="@message.ImageUrl" alt="Image" style="max-width: 200px; max-height: 200px;" />
                                </div>
                            }
                            <div class="time">@message.Timestamp.ToLocalTime().ToString("HH:mm:ss")</div>
                        </li>
                    }


                </ul>
            </div>

            <div class="chat-input">
                <form id="messageForm" method="post" enctype="multipart/form-data">
                    <div class="input-group">
                        <input type="hidden" id="userEmail" value="@Model.CurrentUser.Email" />
                        <input type="text" class="form-control" name="Content" placeholder="Type your message..." />
                        <input type="file" class="form-control" name="Image" accept="image/*" />
                        <button type="submit" class="btn btn-primary" id="sendButton">Send Message</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.3/signalr.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>

    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        connection.start().then(function () {
            console.log("SignalR connection established.");
        }).catch(function (err) {
            console.error("Error starting connection: ", err.toString());
        });

        connection.on("ReceiveMessage", function (userName, firstName, lastName, message, imageUrl) {
            const msgDiv = document.createElement("li");
            const currentUserEmail = document.getElementById("userEmail").value;
            msgDiv.classList.add("list-group-item", userName === currentUserEmail ? "sent" : "received");

            let messageContent = '';

            if (userName !== currentUserEmail) {
                messageContent += `<div class="username">${firstName} ${lastName}</div>`;
            } else {
                messageContent += `<div class="username"></div>`;
            }

            messageContent += `<div class="message">${message}</div>`;
            if (imageUrl) {
                messageContent += `<div class="image chat-image"><img src="${imageUrl}" alt="Image" style="max-width: 200px; max-height: 200px;" /></div>`;
            }
            messageContent += `<div class="time">${new Date().toLocaleTimeString()}</div>`;

            msgDiv.innerHTML = messageContent;
            document.getElementById("messagesList").appendChild(msgDiv);
            scrollToBottom();
        });


        document.getElementById("messageForm").addEventListener("submit", function (event) {
            event.preventDefault();
            const form = event.target;
            const message = form.Content.value;
            const userEmail = document.getElementById("userEmail").value;

            const formData = new FormData(form);

            if (message.trim() !== "" || form.Image.files.length > 0) {
                fetch(form.action, {
                    method: "POST",
                    body: formData
                }).then(response => {
                    if (response.ok) {
                        return response.json();
                    } else {
                        console.error("Form submission failed.");
                        throw new Error('Form submission failed');
                    }
                }).then(data => {
                    connection.invoke("SendMessage", userEmail, data.firstName, data.lastName, message, data.imageUrl).catch(function (err) {
                        console.error("Error sending message: ", err.toString());
                    });
                    form.Content.value = '';
                    form.Image.value = '';
                    scrollToBottom();
                }).catch(error => {
                    console.error("Error submitting form: ", error);
                });
            }
        });

        function scrollToBottom() {
            const chatBox = document.querySelector(".chat-box");
            chatBox.scrollTop = chatBox.scrollHeight;
        }

        window.onload = function () {
            scrollToBottom();
        };
    </script>
}
